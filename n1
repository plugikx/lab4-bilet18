import numpy as np
from numpy.linalg import inv

# Определение матрицы коэффициентов и вектора свободных членов
A = np.array([[1, -2, 1, -2],
              [-9, -1, 1, 8],
              [-7, 0, 8, -6],
              [3, -5, 1, -6]])
b = np.array([-20, 60, -60, -11])

# Метод Гаусса
def solve_gauss(A, b):
    n = len(A)
    # Прямой ход
    for i in range(n):
        # Поиск максимального элемента в столбце
        max_row = i
        for j in range(i + 1, n):
            if abs(A[j][i]) > abs(A[max_row][i]):
                max_row = j
        # Перестановка строк
        A[[i, max_row]] = A[[max_row, i]]
        b[[i, max_row]] = b[[max_row, i]]
        # Приведение к диагональному виду
        for j in range(i + 1, n):
            factor = A[j][i] / A[i][i]
            A[j] -= factor  A[i]
            b[j] -= factor  b[i]
    # Обратный ход
    x = np.zeros(n)
    for i in range(n - 1, -1, -1):
        x[i] = b[i]
        for j in range(i + 1, n):
            x[i] -= A[i][j]  x[j]
        x[i] /= A[i][i]
    return x
