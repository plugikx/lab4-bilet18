#include <iostream>
#include <vector>

// Метод прогонки для решения трехдиагональных систем уравнений
std::vector<double> solveUsingTridiagonal(std::vector<double> a, std::vector<double> b, std::vector<double> c, std::vector<double> d) {
    int n = d.size();
    std::vector<double> alpha(n), beta(n), x(n);
    
    alpha[0] = c[0] / b[0];
    beta[0] = d[0] / b[0];
    
    for (int i = 1; i < n; ++i) {
        alpha[i] = c[i] / (b[i] - a[i] * alpha[i - 1]);
        beta[i] = (d[i] - a[i] * beta[i - 1]) / (b[i] - a[i] * alpha[i - 1]);
    }
    
    x[n - 1] = beta[n - 1];
    for (int i = n - 2; i >= 0; --i) {
        x[i] = beta[i] - alpha[i] * x[i + 1];
    }
    
    return x;
}

int main() {
    std::vector<double> a = {0, -2, 9, -8, 0};
    std::vector<double> b = {8, -19, 21, -23, -7};
    std::vector<double> c = {-2, 9, -8, 9, 0};
    std::vector<double> d = {-14, -55, 19, 86, 8};
    
    std::vector<double> solution = solveUsingTridiagonal(a, b, c, d);
    
    std::cout << "Solution using Tridiagonal method:" << std::endl;
    for (double sol : solution) {
        std::cout << sol << " ";
    }
    std::cout << std::endl;
    
    return 0;
}
