import numpy as np

def seidel(A, b, x0, epsilon):
    n = len(x0)
    x = np.array(x0)
    x_new = np.array(x0)
    
    while True:
        for i in range(n):
            sum1 = np.dot(A[i, :i], x_new[:i])
            sum2 = np.dot(A[i, i+1:], x[i+1:])
            x_new[i] = (b[i] - sum1 - sum2) / A[i, i]
        
        if np.linalg.norm(x_new - x) < epsilon:
            break
        
        x = np.copy(x_new)
    
    return x_new

A = np.array([[18, 8, -3, 4],
              [-7, 15, -5, -2],
              [-4, 0, 13, 4],
              [-8, -8, -6, 31]])

b = np.array([-84, -5, -38, -263])
x0 = np.array([0, 0, 0, 0])
epsilon = 0.01

solution = seidel(A, b, x0, epsilon)
print("Solution using Seidel method with precision 0.01:")
print(solution)
